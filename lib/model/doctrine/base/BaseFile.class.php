<?php

/**
 * BaseFile
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $size
 * @property string $path
 * @property Doctrine_Collection $ressource_files
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method string              getName()            Returns the current record's "name" value
 * @method string              getSize()            Returns the current record's "size" value
 * @method string              getPath()            Returns the current record's "path" value
 * @method Doctrine_Collection getRessourceFiles()  Returns the current record's "ressource_files" collection
 * @method File                setId()              Sets the current record's "id" value
 * @method File                setName()            Sets the current record's "name" value
 * @method File                setSize()            Sets the current record's "size" value
 * @method File                setPath()            Sets the current record's "path" value
 * @method File                setRessourceFiles()  Sets the current record's "ressource_files" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFile extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('file');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             ));
        $this->hasColumn('size', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('path', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             ));

        $this->option('charset', 'utf8');
        $this->option('collate', 'utf8_general_ci');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('RessourceFile as ressource_files', array(
             'local' => 'id',
             'foreign' => 'id_file'));
    }
}